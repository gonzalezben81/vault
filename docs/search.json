[{"path":"https://gonzalezben81.github.io/vault/articles/vault.html","id":"installation","dir":"Articles","previous_headings":"","what":"Installation","title":"vault","text":"","code":"devtools::install_git(url = \"https://github.com/gonzalezben81/vault.git\") library(vault)"},{"path":"https://gonzalezben81.github.io/vault/articles/vault.html","id":"postwrite-secrets-to-vault","dir":"Articles","previous_headings":"","what":"Post/Write secrets to vault","title":"vault","text":"","code":"vault::post_vault_data(url = \"vault-url.com\",path = \"secret-path\",token = token,secrets = list(one=\"two\",three=\"four\"))"},{"path":"https://gonzalezben81.github.io/vault/articles/vault.html","id":"getretrieve-secrets-from-vault","dir":"Articles","previous_headings":"","what":"Get/Retrieve secrets from vault","title":"vault","text":"","code":"get_vault_data(url = \"vault-url.com\",path = \"secret-path\",token = token)"},{"path":"https://gonzalezben81.github.io/vault/articles/vault.html","id":"wrap-secrets-from-vault","dir":"Articles","previous_headings":"","what":"Wrap secrets from vault","title":"vault","text":"","code":"wrap_secrets(url = ,token = ,secrets_to_wrap = c(\"one\"=one,\"two\"=two),ttl = \"30m\")"},{"path":"https://gonzalezben81.github.io/vault/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Ben Gonzalez. Author, maintainer.","code":""},{"path":"https://gonzalezben81.github.io/vault/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Gonzalez B (2024). vault: Allows user interact Hashicorp Vault. R package version 0.2.0, https://github.com/gonzalezben81/vault.","code":"@Manual{,   title = {vault: Allows a user to interact with Hashicorp Vault},   author = {Ben Gonzalez},   year = {2024},   note = {R package version 0.2.0},   url = {https://github.com/gonzalezben81/vault}, }"},{"path":[]},{"path":"https://gonzalezben81.github.io/vault/index.html","id":"vault","dir":"","previous_headings":"","what":"vault","title":"Interact with Hashicorp Vault","text":"package vault allows work Hashicorp Vault. Allowing interact retrieving secrets secure manner. can utilize github aws roles addition native vault roles interact secrets. Additionally can wrap secrets provide one time use token sharing secrets others.","code":""},{"path":"https://gonzalezben81.github.io/vault/index.html","id":"get-data-from-vault","dir":"","previous_headings":"vault","what":"Get data from vault","title":"Interact with Hashicorp Vault","text":"","code":"library(vault)  get_vault_data(url = \"vault-url.com\",path = \"secret-path\",token=token)"},{"path":"https://gonzalezben81.github.io/vault/reference/config_aws_root_creds.html","id":null,"dir":"Reference","previous_headings":"","what":"config_aws_root_creds — config_aws_root_creds","title":"config_aws_root_creds — config_aws_root_creds","text":"Vault: Registers AWS User credentials Vault. Note: Please register ROOT User tokens AWS instance.","code":""},{"path":"https://gonzalezben81.github.io/vault/reference/config_aws_root_creds.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"config_aws_root_creds — config_aws_root_creds","text":"","code":"config_aws_root_creds(   url = NULL,   token = NULL,   aws_key = NULL,   aws_secret = NULL,   aws_region = NULL )"},{"path":"https://gonzalezben81.github.io/vault/reference/config_aws_root_creds.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"config_aws_root_creds — config_aws_root_creds","text":"url URL Hashicorp Vault instance. token token user/github/approle/etc.... registered Vault. aws_key AWS Access Key ID IAM User registered AWS. aws_secret AWS Secret Access Key IAM User registered AWS. aws_region AWS Region IAM User registered ","code":""},{"path":"https://gonzalezben81.github.io/vault/reference/config_aws_root_creds.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"config_aws_root_creds — config_aws_root_creds","text":"writes AWS Accesss Key ID, AWS Secret Access Key, Region used registered IAM User AWS Vault.","code":""},{"path":"https://gonzalezben81.github.io/vault/reference/config_aws_root_creds.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"config_aws_root_creds — config_aws_root_creds","text":"function registers AWS User credentials Vault used get Access Key ID Secret Access Key Users roles AWS.","code":""},{"path":"https://gonzalezben81.github.io/vault/reference/config_aws_root_creds.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"config_aws_root_creds — config_aws_root_creds","text":"Examples role policy trust policy required AWS: ' '","code":"Example Trust Policy required in AWS:  '{ '  \"Version\": \"2012-10-17\", '  \"Statement\": [ '    { '      \"Effect\": \"Allow\", '      \"Principal\": { '        \"AWS\": \"arn:aws:iam::ACCOUNT-ID-WITHOUT-HYPHENS:user/VAULT-AWS-ROOT-CONFIG-USER-NAME\" '      }, '      \"Action\": \"sts:AssumeRole\" '    } '  ] '} ' Example IAM User Policy required in AWS:  '{ '\"Version\": \"2012-10-17\", '\"Statement\": { '  \"Effect\": \"Allow\", '  \"Action\": \"sts:AssumeRole\", '  \"Resource\": \"arn:aws:iam::ACCOUNT-ID-WITHOUT-HYPHENS:role/RoleNameToAssume\" '} '} '"},{"path":"https://gonzalezben81.github.io/vault/reference/config_aws_root_creds.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"config_aws_root_creds — config_aws_root_creds","text":"https://www.vaultproject.io/docs/secrets/aws","code":""},{"path":"https://gonzalezben81.github.io/vault/reference/config_aws_root_creds.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"config_aws_root_creds — config_aws_root_creds","text":"","code":"if (FALSE)   config_aws_root_creds(url,token,aws_key,aws_secret,aws_region)"},{"path":"https://gonzalezben81.github.io/vault/reference/get_approle_token.html","id":null,"dir":"Reference","previous_headings":"","what":"get_approle_token — get_approle_token","title":"get_approle_token — get_approle_token","text":"Vault: Gets approle token Vault.","code":""},{"path":"https://gonzalezben81.github.io/vault/reference/get_approle_token.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get_approle_token — get_approle_token","text":"","code":"get_approle_token(url, role_id, secret_id)"},{"path":"https://gonzalezben81.github.io/vault/reference/get_approle_token.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get_approle_token — get_approle_token","text":"url URL Hashicorp Vault instance. role_id role_id approle Vault. secret_id secret_id approle Vault.","code":""},{"path":"https://gonzalezben81.github.io/vault/reference/get_approle_token.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"get_approle_token — get_approle_token","text":"Return's user token allows approle query secrets Vault.","code":""},{"path":"https://gonzalezben81.github.io/vault/reference/get_approle_token.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"get_approle_token — get_approle_token","text":"function gets approle token vault instance. can utilize approle token query data vault.","code":""},{"path":"https://gonzalezben81.github.io/vault/reference/get_approle_token.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"get_approle_token — get_approle_token","text":"","code":"if (FALSE)   get_approle_token(url,role_id,secret_id)"},{"path":"https://gonzalezben81.github.io/vault/reference/get_aws_creds.html","id":null,"dir":"Reference","previous_headings":"","what":"get_aws_creds — get_aws_creds","title":"get_aws_creds — get_aws_creds","text":"Vault: Gets AWS creds Vault.","code":""},{"path":"https://gonzalezben81.github.io/vault/reference/get_aws_creds.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get_aws_creds — get_aws_creds","text":"","code":"get_aws_creds(url = NULL, token = NULL, role_name = NULL)"},{"path":"https://gonzalezben81.github.io/vault/reference/get_aws_creds.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get_aws_creds — get_aws_creds","text":"url URL Hashicorp Vault instance. token token user/github/approle/etc.... registered Vault. role_name role_name role registered Vault","code":""},{"path":"https://gonzalezben81.github.io/vault/reference/get_aws_creds.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"get_aws_creds — get_aws_creds","text":"Return's user token allows individual query secrets Vault.","code":""},{"path":"https://gonzalezben81.github.io/vault/reference/get_aws_creds.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"get_aws_creds — get_aws_creds","text":"function gets AWS creds role/IAM User registered Vault.","code":""},{"path":"https://gonzalezben81.github.io/vault/reference/get_aws_creds.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"get_aws_creds — get_aws_creds","text":"","code":"if (FALSE)   get_aws_creds(url,token,role_name)"},{"path":"https://gonzalezben81.github.io/vault/reference/get_aws_role_info.html","id":null,"dir":"Reference","previous_headings":"","what":"get_aws_role_info — get_aws_role_info","title":"get_aws_role_info — get_aws_role_info","text":"Vault: Gets AWS role info Vault.","code":""},{"path":"https://gonzalezben81.github.io/vault/reference/get_aws_role_info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get_aws_role_info — get_aws_role_info","text":"","code":"get_aws_role_info(url = NULL, token = NULL, role_name = NULL)"},{"path":"https://gonzalezben81.github.io/vault/reference/get_aws_role_info.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get_aws_role_info — get_aws_role_info","text":"url URL Hashicorp Vault instance. token token user/github/approle/etc.... registered Vault. role_name role_name role registered Vault","code":""},{"path":"https://gonzalezben81.github.io/vault/reference/get_aws_role_info.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"get_aws_role_info — get_aws_role_info","text":"Return's user token allows individual query secrets Vault.","code":""},{"path":"https://gonzalezben81.github.io/vault/reference/get_aws_role_info.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"get_aws_role_info — get_aws_role_info","text":"function gets AWS role info Vault role registered Vault instance.","code":""},{"path":"https://gonzalezben81.github.io/vault/reference/get_aws_role_info.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"get_aws_role_info — get_aws_role_info","text":"","code":"if (FALSE)   get_aws_role_info(url,token,role_name)"},{"path":"https://gonzalezben81.github.io/vault/reference/get_aws_sts.html","id":null,"dir":"Reference","previous_headings":"","what":"get_aws_sts — get_aws_sts","title":"get_aws_sts — get_aws_sts","text":"Vault: Gets AWS STS credentials Vault.","code":""},{"path":"https://gonzalezben81.github.io/vault/reference/get_aws_sts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get_aws_sts — get_aws_sts","text":"","code":"get_aws_sts(url = NULL, token = NULL, role_name = NULL)"},{"path":"https://gonzalezben81.github.io/vault/reference/get_aws_sts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get_aws_sts — get_aws_sts","text":"url url Hashicorp Vault instance. token token user/github/approle/etc.... registered Vault. role_name role_name role registered Vault","code":""},{"path":"https://gonzalezben81.github.io/vault/reference/get_aws_sts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"get_aws_sts — get_aws_sts","text":"Return's user token allows individual query secrets Vault.","code":""},{"path":"https://gonzalezben81.github.io/vault/reference/get_aws_sts.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"get_aws_sts — get_aws_sts","text":"function gets AWS STS credentials registered role Vault instance.","code":""},{"path":"https://gonzalezben81.github.io/vault/reference/get_aws_sts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"get_aws_sts — get_aws_sts","text":"","code":"if (FALSE)   get_aws_sts(url,token,role_name)"},{"path":"https://gonzalezben81.github.io/vault/reference/get_github_token.html","id":null,"dir":"Reference","previous_headings":"","what":"get_github_token — get_github_token","title":"get_github_token — get_github_token","text":"get_github_token: Gets token Vault utilizing github login credentials.","code":""},{"path":"https://gonzalezben81.github.io/vault/reference/get_github_token.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get_github_token — get_github_token","text":"","code":"get_github_token(url, github_token)"},{"path":"https://gonzalezben81.github.io/vault/reference/get_github_token.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get_github_token — get_github_token","text":"url url Hashicorp Vault instance. github_token personal authentication token PAT github repo.","code":""},{"path":"https://gonzalezben81.github.io/vault/reference/get_github_token.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"get_github_token — get_github_token","text":"Return's user token allows individual query secrets Vault.","code":""},{"path":"https://gonzalezben81.github.io/vault/reference/get_github_token.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"get_github_token — get_github_token","text":"function obtains token github user Vault. user can utilize token retrieved query secrets Vault.  need url Hashicorp Vault using PAT github. already created organization github utilize login path Vault.","code":""},{"path":"https://gonzalezben81.github.io/vault/reference/get_github_token.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"get_github_token — get_github_token","text":"","code":"if (FALSE)  vault_git_token<-  get_github_token(url='vault.url',github_token='12345abcdef')  print(vault_git_token) #> Error in eval(expr, envir, enclos): object 'vault_git_token' not found"},{"path":"https://gonzalezben81.github.io/vault/reference/get_role_id.html","id":null,"dir":"Reference","previous_headings":"","what":"get_role_id — get_role_id","title":"get_role_id — get_role_id","text":"Vault: Gets Approle ID Vault.","code":""},{"path":"https://gonzalezben81.github.io/vault/reference/get_role_id.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get_role_id — get_role_id","text":"","code":"get_role_id(url, role_name, token)"},{"path":"https://gonzalezben81.github.io/vault/reference/get_role_id.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get_role_id — get_role_id","text":"url URL Hashicorp Vault instance. role_name name role Vault instance. token token loging role user/pass method github/auth method.","code":""},{"path":"https://gonzalezben81.github.io/vault/reference/get_role_id.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"get_role_id — get_role_id","text":"Return's user/github/etc... token allows individual query secrets Vault via approle.","code":""},{"path":"https://gonzalezben81.github.io/vault/reference/get_role_id.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"get_role_id — get_role_id","text":"function obtains approle ID Vault. user can utilize approle ID retrieved query secrets Vault via approle method.  need URL Hashicorp Vault using user/github/etc... token retrieve approle id.","code":""},{"path":"https://gonzalezben81.github.io/vault/reference/get_role_id.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"get_role_id — get_role_id","text":"","code":"if (FALSE)   get_role_id(url='vautl.url',role_name='jenkins',token='12345abcdef')"},{"path":"https://gonzalezben81.github.io/vault/reference/get_secret_id.html","id":null,"dir":"Reference","previous_headings":"","what":"get_secret_id — get_secret_id","title":"get_secret_id — get_secret_id","text":"Vault: Gets secret id approle registered vault e.g.(jenkins).","code":""},{"path":"https://gonzalezben81.github.io/vault/reference/get_secret_id.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get_secret_id — get_secret_id","text":"","code":"get_secret_id(url, role_name, token)"},{"path":"https://gonzalezben81.github.io/vault/reference/get_secret_id.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get_secret_id — get_secret_id","text":"url URL Hashicorp Vault instance. role_name name role Vault instance. token token user/github/etc... login method","code":""},{"path":"https://gonzalezben81.github.io/vault/reference/get_secret_id.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"get_secret_id — get_secret_id","text":"Return's secret id allows individual query secrets Vault via approle method.","code":""},{"path":"https://gonzalezben81.github.io/vault/reference/get_secret_id.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"get_secret_id — get_secret_id","text":"function obtains secret id approle Vault. user can utilize secret id retrieved obtain approle token Vault.  need URL Hashicorp Vault using role name vault token auth path Vault.","code":""},{"path":"https://gonzalezben81.github.io/vault/reference/get_secret_id.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"get_secret_id — get_secret_id","text":"","code":"if (FALSE)   get_secret_id(url='vautl-url.com',role_name='jenkins',token='12345abcdef')"},{"path":"https://gonzalezben81.github.io/vault/reference/get_user_token.html","id":null,"dir":"Reference","previous_headings":"","what":"get_user_token — get_user_token","title":"get_user_token — get_user_token","text":"Vault: Gets Vault Data","code":""},{"path":"https://gonzalezben81.github.io/vault/reference/get_user_token.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get_user_token — get_user_token","text":"","code":"get_user_token(url, user, pass)"},{"path":"https://gonzalezben81.github.io/vault/reference/get_user_token.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get_user_token — get_user_token","text":"url URL Hashicorp Vault instance. user username registered Vault. pass password username registered Vault","code":""},{"path":"https://gonzalezben81.github.io/vault/reference/get_user_token.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"get_user_token — get_user_token","text":"Return's user token allows individual query secrets Vault.","code":""},{"path":"https://gonzalezben81.github.io/vault/reference/get_user_token.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"get_user_token — get_user_token","text":"function gets user token Vault user name registered Vault instance registered auth/userpass path.","code":""},{"path":"https://gonzalezben81.github.io/vault/reference/get_user_token.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"get_user_token — get_user_token","text":"","code":"if (FALSE)   get_user_token(url,user,pass)"},{"path":"https://gonzalezben81.github.io/vault/reference/get_vault_data.html","id":null,"dir":"Reference","previous_headings":"","what":"get_vault_data — get_vault_data","title":"get_vault_data — get_vault_data","text":"Vault: Gets Vault Data","code":""},{"path":"https://gonzalezben81.github.io/vault/reference/get_vault_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get_vault_data — get_vault_data","text":"","code":"get_vault_data(url = NULL, path = NULL, token = NULL)"},{"path":"https://gonzalezben81.github.io/vault/reference/get_vault_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get_vault_data — get_vault_data","text":"url URL Hashicorp Vault instance. path path secret vault instance. ?version=2 can removed recent version secret returned. user can specify specific verison secret needed. token token vault instance.","code":""},{"path":"https://gonzalezben81.github.io/vault/reference/get_vault_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"get_vault_data — get_vault_data","text":"Return's data secrets vault instance.","code":""},{"path":"https://gonzalezben81.github.io/vault/reference/get_vault_data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"get_vault_data — get_vault_data","text":"function gets \"secrets\" \"data\" vault instance returns inside dataframe. need Hashicorp Vault URL using including full path secret e.g. (https://url.vault.com/v1/secret/data/things) lastly need token allows interact Vault via API.","code":""},{"path":"https://gonzalezben81.github.io/vault/reference/get_vault_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"get_vault_data — get_vault_data","text":"","code":"if (FALSE)   get_vault_data(url = \"https://vault-url.com\",path = \"data?version=2\",token = \"hvs.token\")"},{"path":"https://gonzalezben81.github.io/vault/reference/list_aws_roles.html","id":null,"dir":"Reference","previous_headings":"","what":"list_aws_roles — list_aws_roles","title":"list_aws_roles — list_aws_roles","text":"Vault: Lists AWS roles registered Vault.","code":""},{"path":"https://gonzalezben81.github.io/vault/reference/list_aws_roles.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"list_aws_roles — list_aws_roles","text":"","code":"list_aws_roles(url = NULL, token = NULL)"},{"path":"https://gonzalezben81.github.io/vault/reference/list_aws_roles.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"list_aws_roles — list_aws_roles","text":"url URL Hashicorp Vault instance. token token user/github/approle/etc.... registered Vault.","code":""},{"path":"https://gonzalezben81.github.io/vault/reference/list_aws_roles.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"list_aws_roles — list_aws_roles","text":"Return's AWS roles registered Vault.","code":""},{"path":"https://gonzalezben81.github.io/vault/reference/list_aws_roles.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"list_aws_roles — list_aws_roles","text":"function lists AWS roles registered Vault.","code":""},{"path":"https://gonzalezben81.github.io/vault/reference/list_aws_roles.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"list_aws_roles — list_aws_roles","text":"","code":"if (FALSE)   list_aws_roles(url,token)"},{"path":"https://gonzalezben81.github.io/vault/reference/post_vault_data.html","id":null,"dir":"Reference","previous_headings":"","what":"post_vault_data — post_vault_data","title":"post_vault_data — post_vault_data","text":"Vault: Posts data path specify Vault.","code":""},{"path":"https://gonzalezben81.github.io/vault/reference/post_vault_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"post_vault_data — post_vault_data","text":"","code":"post_vault_data(url = NULL, path = NULL, token = NULL, secrets = NULL)"},{"path":"https://gonzalezben81.github.io/vault/reference/post_vault_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"post_vault_data — post_vault_data","text":"url URL Hashicorp Vault instance. path path secret vault instance. token token vault instance. secrets secrets written vault.","code":""},{"path":"https://gonzalezben81.github.io/vault/reference/post_vault_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"post_vault_data — post_vault_data","text":"Allows user write data Vault.","code":""},{"path":"https://gonzalezben81.github.io/vault/reference/post_vault_data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"post_vault_data — post_vault_data","text":"function writes secrets data vault instance returns message secrets written correctly. need HashiCorp Vault URL using including full path secret e.g. (https://url.vault.com/v1/secret/things) lastly need token allows interact Vault via API. can pass list secrets use 'list(one=\"two\",three=\"four) forth. allow send several secrets Vault . Remember overwrite secrets want write new secrets old secrets placeholders.","code":""},{"path":"https://gonzalezben81.github.io/vault/reference/post_vault_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"post_vault_data — post_vault_data","text":"","code":"if (FALSE)   post_vault_data(url,path,token,token,secrets=list(one=\"two\",three=\"four\"))"},{"path":"https://gonzalezben81.github.io/vault/reference/wrap_secrets.html","id":null,"dir":"Reference","previous_headings":"","what":"wrap_secrets — wrap_secrets","title":"wrap_secrets — wrap_secrets","text":"Vault: Gets approle token Vault.","code":""},{"path":"https://gonzalezben81.github.io/vault/reference/wrap_secrets.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"wrap_secrets — wrap_secrets","text":"","code":"wrap_secrets(url = NULL, token = NULL, secrets_to_wrap = NULL, ttl = \"30m\")"},{"path":"https://gonzalezben81.github.io/vault/reference/wrap_secrets.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"wrap_secrets — wrap_secrets","text":"url URL Hashicorp Vault instance. token token used wrap secrets Vault via wrapping utility. secrets_to_wrap secrets want wrap via Vault wrapping utility. ttl Time live ttl, refers time token able used unwrap wrapped secrets Vault.","code":""},{"path":"https://gonzalezben81.github.io/vault/reference/wrap_secrets.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"wrap_secrets — wrap_secrets","text":"Return's wrap token used unwrap secrets Vault.","code":""},{"path":"https://gonzalezben81.github.io/vault/reference/wrap_secrets.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"wrap_secrets — wrap_secrets","text":"function wraps secrets via wrap endpoint Vault. function returns single use token can utilized retrieve secrets. [Vault Wrap Token API](https://developer.hashicorp.com/vault/api-docs/system/wrapping-wrap) [Vault Wrapping Overview](https://developer.hashicorp.com/vault/docs/concepts/response-wrapping)","code":""},{"path":"https://gonzalezben81.github.io/vault/reference/wrap_secrets.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"wrap_secrets — wrap_secrets","text":"","code":"if (FALSE)   wrap_secrets(url,token,secrets_to_wrap,ttl)"}]
