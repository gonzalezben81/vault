[{"path":"https://gonzalezben81.github.io/vault/articles/awscftemplates.html","id":"vault-aws-iam-user","dir":"Articles","previous_headings":"","what":"Vault AWS IAM User","title":"AWS & Vault CloudFormation Templates","text":"AWS cloud formation template create IAM User interacting Vault.","code":"AWSTemplateFormatVersion: '2010-09-09' Parameters:   VaultIAMUserName:     Description: IAM User Name for interacting with Vault     Type: String     Default: vaultauthentication Resources:   VaultIAMUser:     Type: AWS::IAM::User     Properties:       UserName: !Ref VaultIAMUserName       Path: \"/\"       Policies:       - PolicyName: vaultiamuserauth         PolicyDocument:           Version: '2012-10-17'           Statement:             - Effect: Allow               Action:                 - ec2:DescribeInstances                 - iam:GetInstanceProfile                 - iam:GetUser                 - iam:ListRoles                 - iam:GetRole                 - iam:CreateUser                 - iam:PutUserPolicy               Resource: '*' Outputs:   IAMUserName:     Description: IAM User Name     Value: !Ref VaultIAMUser   IAMUserArn:     Description: IAM User Arn     Value: !GetAtt VaultIAMUser.Arn"},{"path":"https://gonzalezben81.github.io/vault/articles/awscftemplates.html","id":"vault-aws-iam-role","dir":"Articles","previous_headings":"","what":"Vault AWS IAM Role","title":"AWS & Vault CloudFormation Templates","text":"AWS cloud formation template create IAM Role interacting Vault.","code":"AWSTemplateFormatVersion: '2010-09-09' Parameters:   VaultIAMRoleName:     Description: IAM Role Name for interacting with Vault     Type: String     Default: vaultauthentication Resources:   VaultIAMRole:     Type: AWS::IAM::Role     Properties:       RoleName: !Ref VaultIAMRoleName       AssumeRolePolicyDocument:         Version: '2012-10-17'         Statement:         - Effect: Allow           Principal:             Service:             - ec2.amazonaws.com           Action:           - sts:AssumeRole       Path: \"/\"   VaultIAMRolePolicies:     Type: AWS::IAM::Policy     Properties:       PolicyName: vaultiamroleauth       PolicyDocument:         Version: '2012-10-17'         Statement:           - Effect: Allow             Action:               - ec2:DescribeInstances               - iam:GetInstanceProfile               - iam:GetUser               - iam:GetRole             Resource: '*'           - Effect: Allow             Action:               - sts:AssumeRole             Resource:               - !Join ['',['arn:aws:iam::',!Ref AWS::AccountId,':role/',!Ref VaultIAMRoleName]]           - Sid: ManageOwnAccessKeys             Effect: Allow             Action:               - iam:CreateAccessKey               - iam:DeleteAccessKey               - iam:GetAccessKeyLastUsed               - iam:GetUser               - iam:ListAccessKeys               - iam:UpdateAccessKey             Resource:               - !Join ['',['arn:aws:iam::*:user/',!Ref VaultIAMRoleName]]       Roles:       - !Ref VaultIAMRole   VaultIAMInstanceProfile:     Type: AWS::IAM::InstanceProfile     Properties:       InstanceProfileName: !Ref VaultIAMRoleName       Path: \"/\"       Roles:       - !Ref VaultIAMRole Outputs:   IAMRoleName:     Description: IAM Role Name     Value: !Ref VaultIAMRole   IAMRoleArn:     Description: IAM Role Arn     Value: !GetAtt VaultIAMRole.Arn"},{"path":"https://gonzalezben81.github.io/vault/articles/awsvault.html","id":"creates-aws-resources","dir":"Articles","previous_headings":"","what":"Creates AWS Resources","title":"AWS & Vault","text":"configure HCP Vault AWS auth method, must create necessary resources AWS. AWS auth method require IAM policy permits appropriate access auth method, IAM user programmatic access, one roles assign AWS services require authentication Vault.","code":""},{"path":"https://gonzalezben81.github.io/vault/articles/awsvault.html","id":"create-the-iam-policy-for-your-iam-user","dir":"Articles","previous_headings":"","what":"Create the IAM Policy for your IAM User","title":"AWS & Vault","text":"policy needs attached IAM User creating AWS. IAM User Cloud Formation Template Note: may need add IAM permissions receive errors authenticating","code":"{     \"Version\": \"2012-10-17\",     \"Statement\": [         {             \"Effect\": \"Allow\",             \"Action\": [                 \"ec2:DescribeInstances\",                 \"iam:GetInstanceProfile\",                 \"iam:GetUser\",                 \"iam:ListRoles\",                 \"iam:GetRole\",                 \"iam:CreateUser\",                 \"iam:PutUserPolicy\"             ],             \"Resource\": \"*\"         }     ] }"},{"path":"https://gonzalezben81.github.io/vault/articles/awsvault.html","id":"create-iam-policy-for-your-iam-role","dir":"Articles","previous_headings":"","what":"Create IAM Policy for your IAM Role","title":"AWS & Vault","text":"IAM Role Cloud Formation Template now create IAM policy IAM Role. need attach IAM Role allow Vault connect authenticate. can replace vaultauth name IAM Role IAM User created.","code":"{     \"Version\": \"2012-10-17\",     \"Statement\": [         {             \"Effect\": \"Allow\",             \"Action\": [                 \"ec2:DescribeInstances\",                 \"iam:GetInstanceProfile\",                 \"iam:GetUser\",                 \"iam:GetRole\"             ],             \"Resource\": \"*\"         },         {             \"Effect\": \"Allow\",             \"Action\": [                 \"sts:AssumeRole\"             ],             \"Resource\": [                 \"arn:aws:iam::<aws-account-number>:role/vaultauth\"             ]         },         {             \"Sid\": \"ManageOwnAccessKeys\",             \"Effect\": \"Allow\",             \"Action\": [                 \"iam:CreateAccessKey\",                 \"iam:DeleteAccessKey\",                 \"iam:GetAccessKeyLastUsed\",                 \"iam:GetUser\",                 \"iam:ListAccessKeys\",                 \"iam:UpdateAccessKey\"             ],             \"Resource\": \"arn:aws:iam::*:user/vaultauth\"         }     ] }"},{"path":"https://gonzalezben81.github.io/vault/articles/awsvault.html","id":"create-the-connections-to-vault-via-aws-iam-user-and-aws-iam-role","dir":"Articles","previous_headings":"","what":"Create the connections to Vault via AWS IAM User and AWS IAM Role","title":"AWS & Vault","text":"Enable aws auth vault instance. Check see vault auth aws method enabled. Next connect IAM role created AWS Vault aws auth backend. configure AWS auth method access AWS account using Access key ID Secret Access Key previously created IAM User created AWS.","code":"vault auth enable aws vault auth list vault write auth/aws/config/client secret_key=<secret-key> access_key=<access-key>"},{"path":"https://gonzalezben81.github.io/vault/articles/awsvault.html","id":"create-vault-role-for-connection-to-aws-iam-role","dir":"Articles","previous_headings":"","what":"Create Vault role for connection to AWS IAM Role","title":"AWS & Vault","text":"Configure AWS auth method trust AWS IAM role previously created attach vault-policy--aws-ec2role token provided AWS auth method. Replace  actual IAM Role ARN created AWS. Note: IAM User Arn look like following: arn:aws:iam::<aws-account-number>:user/vaultauth List roles created aws auth method.","code":"vault write auth/aws/role/vaultauth \\      auth_type=iam \\      bound_iam_principal_arn=arn:aws:iam::<aws-account-number>:role/vaultauth \\      policies=default,allinone vault list /auth/aws/role"},{"path":"https://gonzalezben81.github.io/vault/articles/awsvault.html","id":"setup-authentication-to-vault-via-an-iam-role","dir":"Articles","previous_headings":"","what":"Setup authentication to Vault via an IAM Role","title":"AWS & Vault","text":"auth/aws/role/ - name role creating vault auth_type=iam - notes vault authenticate via IAM role bound_iam_principal_arn - IAM Role arn get AWS account policies - policy(s) associate vault role","code":"vault write auth/aws/role/vaultauth auth_type=iam \\               bound_iam_principal_arn=<iam-arn> policies=default,allinonepolicy max_ttl=500h"},{"path":"https://gonzalezben81.github.io/vault/articles/awsvault.html","id":"setup-authentication-to-vault-via-an-iam-role-or-an-ec2-auth-method","dir":"Articles","previous_headings":"","what":"Setup authentication to Vault via an IAM Role or an ec2 Auth Method","title":"AWS & Vault","text":"","code":"###Vault role that will authenticate via the ec2 auth method vault write auth/aws/role/vaultauth auth_type=ec2 bound_ami_id=ami-fce3c696 policies=prod,dev max_ttl=500h ###Create Vault role that allows an IAM role to authenticate with it vault write auth/aws/role/vaultauth auth_type=iam \\               bound_iam_principal_arn=arn:aws:iam::<aws-account-number>:role/test-iam-vault-auth policies=allinone,dev max_ttl=500"},{"path":"https://gonzalezben81.github.io/vault/articles/awsvault.html","id":"test-your-login-from-an-ec2-instance","dir":"Articles","previous_headings":"","what":"Test your login from an ec2 instance","title":"AWS & Vault","text":"","code":"vault login -method=aws region=us-east-1 role=vaultauthentication"},{"path":"https://gonzalezben81.github.io/vault/articles/awsvault.html","id":"test-listing-secrets","dir":"Articles","previous_headings":"","what":"Test listing secrets","title":"AWS & Vault","text":"Vault Auth Method IAM ec2 Auth Methods Vault AWS Auth Method API","code":"vault kv get -mount=secret <secret-path>"},{"path":"https://gonzalezben81.github.io/vault/articles/azurevault.html","id":"creates-azure-resources","dir":"Articles","previous_headings":"","what":"Creates Azure Resources","title":"Azure & Vault","text":"configure Azure auth method Vault want setup App Registration Azure. provide callback URLs authenticating via Azure OIDC method.","code":""},{"path":"https://gonzalezben81.github.io/vault/articles/azurevault.html","id":"enable-the-oidc-auth-method","dir":"Articles","previous_headings":"","what":"Enable the OIDC auth method","title":"Azure & Vault","text":"Check see vault auth oidc method enabled.","code":"vault auth enable oidc vault auth list"},{"path":"https://gonzalezben81.github.io/vault/articles/azurevault.html","id":"setup-the-oidc-configuration-for-azure-in-vault","dir":"Articles","previous_headings":"","what":"Setup the OIDC configuration for Azure in Vault","title":"Azure & Vault","text":"Next want setup oidc configuration Azure Vault. want via Vault CLI, preferrably root token user oidc_discover_url: URL Azure tenant oidc_client_id: client id Azure tenant oidc_client_secret: client secret Azure tenant","code":"vault write auth/oidc/config \\     oidc_discovery_url=\"https://login.microsoftonline.com/<azure-tenant-id>/v2.0\" \\     oidc_client_id=\"<azure-client-id>\" \\     oidc_client_secret=\"<azure-secret>\" \\     default_role=\"azure-developers\""},{"path":"https://gonzalezben81.github.io/vault/articles/azurevault.html","id":"setup-azure-role-that-will-authenticate-with-vault","dir":"Articles","previous_headings":"","what":"Setup Azure role that will authenticate with Vault","title":"Azure & Vault","text":"want create Azure role authenticate Azure Vault .","code":"vault write auth/oidc/role/azure-developers \\     user_claim=\"email\" \\     groups_claim=\"groups\" \\     role_type=\"oidc\" \\     oidc_scopes=\"https://graph.microsoft.com/.default\" \\     allowed_redirect_uris=\"\"http://localhost:8250/oidc/callback\",https://<url-redirect >/ui/vault/auth/oidc/oidc/callback\"     policies=\"azure-developers\" \\     ttl=1h"},{"path":"https://gonzalezben81.github.io/vault/articles/azurevault.html","id":"test-the-azure-oidc-login-method","dir":"Articles","previous_headings":"","what":"Test the Azure OIDC login method","title":"Azure & Vault","text":"References Azure Vault Tutorial Azure Tenant Setup","code":"vault login -method=oidc"},{"path":"https://gonzalezben81.github.io/vault/articles/github.html","id":"create-a-github-connection","dir":"Articles","previous_headings":"","what":"Create a GitHub Connection","title":"GitHub & Vault","text":"want enable auth method github via CLI Vault instance.","code":"vault auth enable github"},{"path":"https://gonzalezben81.github.io/vault/articles/github.html","id":"next-configure-the-endpoint-for-vault-to-communicate-with-github","dir":"Articles","previous_headings":"","what":"Next configure the endpoint for Vault to communicate with GitHub","title":"GitHub & Vault","text":"enable GitHub org part communicate GitHub. know create GitHub org can follow documentation : GitHub Org","code":"vault write auth/github/config organization=<replace-with-your-github-org>"},{"path":"https://gonzalezben81.github.io/vault/articles/github.html","id":"map-users-or-teams-in-your-github-organization-to-policies-in-vault-","dir":"Articles","previous_headings":"","what":"Map Users or Teams in your GitHub organization to policies in Vault.","title":"GitHub & Vault","text":"Example Vault policy working secrets. Note: broad policy Vault may want restrict github users interact Vault.","code":"vault write auth/github/map/users/<github-user-in-org> value=all-in-one-policy path \"secret/*\" {   capabilities = [\"create\", \"read\", \"update\", \"patch\", \"delete\", \"list\"] }  path \"kv/*\" {   capabilities = [\"create\", \"read\", \"update\", \"patch\", \"delete\", \"list\"] }"},{"path":"https://gonzalezben81.github.io/vault/articles/github.html","id":"retrieve-the-github-token-for-the-github-usergroup-that-is-configured","dir":"Articles","previous_headings":"","what":"Retrieve the GitHub token for the github user/group that is configured","title":"GitHub & Vault","text":"","code":"vault_git_token<-  get_github_token(url='vault.url.com',github_token='ghp_12345abcdef')"},{"path":"https://gonzalezben81.github.io/vault/articles/github.html","id":"getretrieve-secrets-from-vault-via-the-github-token","dir":"Articles","previous_headings":"","what":"Get/Retrieve secrets from Vault via the GitHub token","title":"GitHub & Vault","text":"","code":"get_vault_data(url = \"vault-url.com\",path = \"secret-path\",token = vault_git_token)"},{"path":"https://gonzalezben81.github.io/vault/articles/github.html","id":"wrap-secrets-via-vault","dir":"Articles","previous_headings":"","what":"Wrap secrets via vault","title":"GitHub & Vault","text":"function allows wrap secrets vault send securly another person via plain text. vault token returned good one time use. see following error vault console token wrap secrets already utilized elsewhere.","code":"wrap_secrets(url = \"vault-url.com\",token = vault_git_token ,secrets_to_wrap = list(\"one\"=one,\"two\"=two),ttl = \"30m\")"},{"path":"https://gonzalezben81.github.io/vault/articles/vault.html","id":"installation","dir":"Articles","previous_headings":"","what":"Installation","title":"vault","text":"","code":"devtools::install_git(url = \"https://github.com/gonzalezben81/vault.git\") library(vault)"},{"path":"https://gonzalezben81.github.io/vault/articles/vault.html","id":"postwrite-secrets-to-vault","dir":"Articles","previous_headings":"Installation","what":"Post/Write secrets to vault","title":"vault","text":"","code":"vault::post_vault_data(url = \"vault-url.com\",path = \"secret-path\",token = token,secrets = list(one=\"two\",three=\"four\"))"},{"path":"https://gonzalezben81.github.io/vault/articles/vault.html","id":"getretrieve-secrets-from-vault","dir":"Articles","previous_headings":"Installation","what":"Get/Retrieve secrets from vault","title":"vault","text":"","code":"get_vault_data(url = \"vault-url.com\",path = \"secret-path\",token = token)"},{"path":"https://gonzalezben81.github.io/vault/articles/vault.html","id":"wrap-secrets-via-vault","dir":"Articles","previous_headings":"Installation","what":"Wrap secrets via vault","title":"vault","text":"function allows wrap secrets vault send securly another person via plain text. vault token returned good one time use,","code":"wrap_secrets(url = \"vault-url.com\",token = token ,secrets_to_wrap = c(\"one\"=one,\"two\"=two),ttl = \"30m\")"},{"path":"https://gonzalezben81.github.io/vault/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Ben Gonzalez. Author, maintainer.","code":""},{"path":"https://gonzalezben81.github.io/vault/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Gonzalez B (2024). vault: Allows user interact HashiCorp Vault. R package version 0.2.0, https://github.com/gonzalezben81/vault.","code":"@Manual{,   title = {vault: Allows a user to interact with HashiCorp Vault},   author = {Ben Gonzalez},   year = {2024},   note = {R package version 0.2.0},   url = {https://github.com/gonzalezben81/vault}, }"},{"path":[]},{"path":"https://gonzalezben81.github.io/vault/index.html","id":"vault","dir":"","previous_headings":"","what":"vault","title":"Interact with HashiCorp Vault","text":"package vault allows work HashiCorp Vault. Allowing interact retrieving secrets secure manner. can utilize github aws roles addition native vault roles interact secrets. Additionally can wrap secrets provide one time use token sharing secrets others.","code":""},{"path":"https://gonzalezben81.github.io/vault/index.html","id":"get-data-from-vault","dir":"","previous_headings":"vault","what":"Get data from vault","title":"Interact with HashiCorp Vault","text":"","code":"library(vault)  get_vault_data(url = \"vault-url.com\",path = \"secret-path\",token=token)"},{"path":"https://gonzalezben81.github.io/vault/reference/aws_create_iam_role.html","id":null,"dir":"Reference","previous_headings":"","what":"aws_create_iam_role — aws_create_iam_role","title":"aws_create_iam_role — aws_create_iam_role","text":"Vault: Creates Vault AWS IAM role interact IAM role AWS account.","code":""},{"path":"https://gonzalezben81.github.io/vault/reference/aws_create_iam_role.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"aws_create_iam_role — aws_create_iam_role","text":"","code":"aws_create_iam_role(   url = NULL,   token = NULL,   auth_type = \"iam\",   role_name = NULL,   bound_iam_principal_arn = NULL,   policies = NULL )"},{"path":"https://gonzalezben81.github.io/vault/reference/aws_create_iam_role.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"aws_create_iam_role — aws_create_iam_role","text":"url URL HashiCorp Vault instance. token token user/github/approle/etc.... registered Vault. auth_type authentication type role creating e.g. iam. role_name name role creating. bound_iam_principal_arn arn iam role created AWS. policies policy list policies Vault associate IAM role .","code":""},{"path":"https://gonzalezben81.github.io/vault/reference/aws_create_iam_role.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"aws_create_iam_role — aws_create_iam_role","text":"Return's list aws roles present Vault instance.","code":""},{"path":"https://gonzalezben81.github.io/vault/reference/aws_create_iam_role.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"aws_create_iam_role — aws_create_iam_role","text":"function creates Vault AWS IAM Role associates IAM Role already created AWS.","code":""},{"path":"https://gonzalezben81.github.io/vault/reference/aws_create_iam_role.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"aws_create_iam_role — aws_create_iam_role","text":"Vault AWS Create Role Documentation","code":""},{"path":"https://gonzalezben81.github.io/vault/reference/aws_create_iam_role.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"aws_create_iam_role — aws_create_iam_role","text":"","code":"if (FALSE) { aws_create_iam_role(url=NULL,token=NULL,auth_type=\"iam\",role_name=NULL,bound_iam_principal_arn=NULL,policies=NULL)  }"},{"path":"https://gonzalezben81.github.io/vault/reference/aws_list_roles.html","id":null,"dir":"Reference","previous_headings":"","what":"aws_list_roles — aws_list_roles","title":"aws_list_roles — aws_list_roles","text":"Vault: Lists/Gets AWS role present Vault instance.","code":""},{"path":"https://gonzalezben81.github.io/vault/reference/aws_list_roles.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"aws_list_roles — aws_list_roles","text":"","code":"aws_list_roles(url = NULL, token = NULL)"},{"path":"https://gonzalezben81.github.io/vault/reference/aws_list_roles.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"aws_list_roles — aws_list_roles","text":"url URL HashiCorp Vault instance. token token user/github/approle/etc.... registered Vault.","code":""},{"path":"https://gonzalezben81.github.io/vault/reference/aws_list_roles.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"aws_list_roles — aws_list_roles","text":"Return's list aws roles present Vault instance.","code":""},{"path":"https://gonzalezben81.github.io/vault/reference/aws_list_roles.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"aws_list_roles — aws_list_roles","text":"function lists AWS roles present Vault instance.","code":""},{"path":"https://gonzalezben81.github.io/vault/reference/aws_list_roles.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"aws_list_roles — aws_list_roles","text":"Vault AWS LIST Roles Documentation HTTR Package VERB Function Open R Project new tab","code":""},{"path":"https://gonzalezben81.github.io/vault/reference/aws_list_roles.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"aws_list_roles — aws_list_roles","text":"","code":"if (FALSE) { aws_list_roles(url=\"vault-url.com\",token=token)  }"},{"path":"https://gonzalezben81.github.io/vault/reference/aws_rotate_root_creds.html","id":null,"dir":"Reference","previous_headings":"","what":"aws_rotate_root_creds — aws_rotate_root_creds","title":"aws_rotate_root_creds — aws_rotate_root_creds","text":"Vault: Rotates root credentials used AWS Vault.","code":""},{"path":"https://gonzalezben81.github.io/vault/reference/aws_rotate_root_creds.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"aws_rotate_root_creds — aws_rotate_root_creds","text":"","code":"aws_rotate_root_creds(url = NULL, token = NULL)"},{"path":"https://gonzalezben81.github.io/vault/reference/aws_rotate_root_creds.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"aws_rotate_root_creds — aws_rotate_root_creds","text":"url URL HashiCorp Vault instance. token token (preferrably) root token rotate AWS credentials used Vault.","code":""},{"path":"https://gonzalezben81.github.io/vault/reference/aws_rotate_root_creds.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"aws_rotate_root_creds — aws_rotate_root_creds","text":"Return's access key rotated AWS.","code":""},{"path":"https://gonzalezben81.github.io/vault/reference/aws_rotate_root_creds.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"aws_rotate_root_creds — aws_rotate_root_creds","text":"function rotates root IAM User credentials used AWS Vault.","code":""},{"path":"https://gonzalezben81.github.io/vault/reference/aws_rotate_root_creds.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"aws_rotate_root_creds — aws_rotate_root_creds","text":"","code":"if (FALSE)   aws_rotate_root_creds(url,token)"},{"path":"https://gonzalezben81.github.io/vault/reference/build_home.html","id":null,"dir":"Reference","previous_headings":"","what":"Build home section — build_home","title":"Build home section — build_home","text":"`build_home()` function generates pages top-level site including: * home page * HTML files `.md` files `./` `.github/`. * authors page (`DESCRIPTION`) * citation page (`inst/CITATION`, present). * license page * default 404 page `.github/404.md` found. `build_home_index()` rebuilds just index page; useful rapidly iterating experimenting site styles. # Home page main content home page (`index.html`) generated `pkgdown/index.md`, `index.md`, `README.md`, order. packages use `README.md` also displayed GitHub CRAN. Use `index.md` want package website look different README, use `pkgdown/index.md` want file live package root directory. use `index.Rmd` `README.Rmd` responsibility knit document create corresponding `.md`. pkgdown touches files `doc/` directory. Extra markdown files base directory (e.g. `ROADMAP.md`) `.github/` (e.g. `CODE_OF_CONDUCT.md`) copied `build_home()` `docs/` converted HTML. home page also features sidebar information extracted package. can tweak via configuration file, help make home page informative possible landing page. ## Images figures want include images `README.md`, must stored somewhere package can displayed CRAN website. best place put `man/figures`. generating figures R Markdown, make sure set `fig.path` followed: ``` r knitr::opts_chunk$set(   fig.path = \"man/figures/\" ) ``` usually go chunk `include = FALSE`. ```` markdown ```r chunk-name, include=FALSE`r ''` knitr::opts_chunk$set(   fig.path = \"man/figures/\" ) ``` ```` ## Package logo package logo, can include top README level-one heading: ``` markdown # pkgdown <img src=\"man/figures/logo.png\" align=\"right\" /> ``` [init_site()] also automatically create favicon set package logo. ## YAML config - title description default, page title description extracted automatically `Title` `Description` fields `DESCRIPTION` (stripping single quotes quoted words). CRAN ensures fields contain phrases like \"R package\" obvious CRAN. make package findable search engines, good practice override `title` `description`, thinking people might search : ```yaml home:   title: R package pool-noodle discovery   description: >     love R? love pool-noodles? , might enjoy     using package automatically discover add pool-noodles     growing collection. ``` (Note use YAML's `>` .e. \"YAML pipes\"; convenient way writing paragraphs text.) ## Dev badges pkgdown identifies badges three ways: -   image-containing links `<!-- badges: start -->`     `<!-- badges: end -->`, e.g. created `usethis::use_readme_md()`     `usethis::use_readme_rmd()`. always empty line     `<!-- badges: end -->` line. divide badges paragraphs,     make sure add empty line `<!-- badges: end -->` line. -   image-containing links within `<div id=\"badges\"><\/div>`. -   Within first paragraph, contains image-containing links. Identified badges **removed** _main content_. shown _sidebar_ depending development mode sidebar customization, see sidebar section. # Authors default, pkgdown display author information three places: * sidebar, * left part side footer, * author page. documentation describes customise overall author display. See `?build_home` `?build_site` details changing location authors information within home sidebar site footer. ## Authors ORCID bio Author ORCID identification numbers `DESCRIPTION` linked using ORCID logo: ```r Authors@R: c(     person(\"Hadley\", \"Wickham\", , \"hadley@rstudio.com\", role = c(\"aut\", \"cre\"),       comment = c(ORCID = \"0000-0003-4757-117X\")     ),     person(\"Jay\", \"Hesselberth\", role = \"aut\",       comment = c(ORCID = \"0000-0002-6299-179X\")     )   ) ``` want add details authors involvement package, can use comment field, rendered authors page. ```r Authors@R: c(     person(\"Hadley\", \"Wickham\", , \"hadley@rstudio.com\", role = c(\"aut\", \"cre\"),       comment = c(ORCID = \"0000-0003-4757-117X\", \"Indenter--chief\")     ),     person(\"Jay\", \"Hesselberth\", role = \"aut\",       comment = c(ORCID = \"0000-0002-6299-179X\")     )   ) ``` ## Additional control via YAML can control additinal aspects authors display via `authors` YAML field: * display author footer, sidebar authors page, * authors (role) displayed sidebar footer, * text authors footer, * text authors sidebar, * text authors authors page. can modify author's name displayed adding subsection `authors`. entry `authors` named author's name (matching `DESCRIPTION`) can contain `href` /`html` fields: * `href` provided, author's name linked URL. * `html` provided, shown instead author's name.   particularly useful want display logo corporate   sponsor. Use absolute URL image, relative link. Use empty   alternative text rather alternative text screen-reader skip . ```yaml authors:   firstname lastname:     href: \"http://name-website.com\"     html: \"<img src='https://website.com/name-picture.png' width=72 alt=''>\" ``` default, \"developers\" list shown sidebar footer populated maintainer (\"cre\"), authors (\"aut\"), funder (\"fnd\") `DESCRIPTION`. choose roles filtering. configuration : * maintainer funder(s) appear footer, text   \"Crafted \", * authors contributors appear sidebar, * authors list sidebar preceded followed text, * authors list authors page preceded followed text. ```yaml authors:   footer:     roles: [cre, fnd]     text: \"Crafted \"   sidebar:     roles: [aut, ctb]     : \"** work?\"     : \"Thanks !\"   : \"package proudly brought :\"   : \"See [changelog](news/index.html) contributors. :pray:\" ``` want filter authors based something else roles, consider using custom sidebar/footer component (see `?build_home`/`?build_site`, respectively). # Sidebar can customise homepage sidebar `home.sidebar` field. made two pieces: `structure`, defines overall layout, `components`, defines piece looks like. organisation makes easy mix match pkgdown defaults customisations. default structure: ``` yaml home:   sidebar:     structure: [links, license, community, citation, authors, dev] ``` drawn seven built-components: -   `links`: automated links generated `URL` `BugReports` fields     `DESCRIPTION` plus manual links `home.links` field: ``` yaml     home:       links:       - text: Link text         href: https://website.com       - text: Roadmap         href: /roadmap.html     ``` -   `license`: Licensing information `LICENSE`/`LICENCE`     `LICENSE.md`/`LICENCE.md` files present. -   `community`: links `.github/CONTRIBUTING.md`,     `.github/CODE_OF_CONDUCT.md`, etc. -   `citation`: link package citation information. Uses either     `inst/CITATION` , absent, information `DESCRIPTION`. -   `authors`: selected authors `DESCRIPTION`. -   `dev`: development status badges extracted `README.md`/`index.md`.     shown \"development\" versions websites; see     \"Development mode\" `?build_site` details. -   `toc`: table contents README (shown default). can also add components, `text` markdown text: ``` yaml home:   sidebar:     structure: [authors, custom, toc, dev]     components:       custom:         title: Funding         text: *grateful* funding! ``` Alternatively, can provide ready-made sidebar HTML: ``` yaml home:   sidebar:     html: path--sidebar.html ``` completely remove : ``` yaml home:   sidebar: FALSE ```","code":""},{"path":"https://gonzalezben81.github.io/vault/reference/build_home.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Build home section — build_home","text":"","code":"build_home(pkg = \".\", override = list(), preview = FALSE, quiet = TRUE)"},{"path":"https://gonzalezben81.github.io/vault/reference/config_aws_root_creds.html","id":null,"dir":"Reference","previous_headings":"","what":"config_aws_root_creds — config_aws_root_creds","title":"config_aws_root_creds — config_aws_root_creds","text":"Vault: Registers AWS User credentials Vault. Note: Please register ROOT User tokens AWS instance. function registers AWS User credentials Vault used get Access Key ID Secret Access Key Users roles AWS. Examples role policy trust policy required AWS:","code":""},{"path":"https://gonzalezben81.github.io/vault/reference/config_aws_root_creds.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"config_aws_root_creds — config_aws_root_creds","text":"","code":"config_aws_root_creds(   url = NULL,   token = NULL,   aws_key = NULL,   aws_secret = NULL,   aws_region = NULL )"},{"path":"https://gonzalezben81.github.io/vault/reference/config_aws_root_creds.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"config_aws_root_creds — config_aws_root_creds","text":"url URL HashiCorp Vault instance. token token user/github/approle/etc.... registered Vault. aws_key AWS Access Key ID IAM User registered AWS. aws_secret AWS Secret Access Key IAM User registered AWS. aws_region AWS Region IAM User registered ","code":""},{"path":"https://gonzalezben81.github.io/vault/reference/config_aws_root_creds.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"config_aws_root_creds — config_aws_root_creds","text":"Writes AWS Access Key ID, AWS Secret Access Key, Region used registered IAM User AWS Vault.","code":""},{"path":"https://gonzalezben81.github.io/vault/reference/config_aws_root_creds.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"config_aws_root_creds — config_aws_root_creds","text":"Example Trust Policy required AWS: Example IAM User Policy required AWS:","code":"{   \"Version\": \"2012-10-17\",   \"Statement\": [     {       \"Effect\": \"Allow\",       \"Principal\": {         \"AWS\": \"arn:aws:iam::ACCOUNT-ID-WITHOUT-HYPHENS:user/VAULT-AWS-ROOT-CONFIG-USER-NAME\"       },       \"Action\": \"sts:AssumeRole\"     }   ]  } { \"Version\": \"2012-10-17\", \"Statement\": {   \"Effect\": \"Allow\",   \"Action\": \"sts:AssumeRole\",   \"Resource\": \"arn:aws:iam::ACCOUNT-ID-WITHOUT-HYPHENS:role/RoleNameToAssume\"    }   }"},{"path":"https://gonzalezben81.github.io/vault/reference/config_aws_root_creds.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"config_aws_root_creds — config_aws_root_creds","text":"https://www.vaultproject.io/docs/secrets/aws","code":""},{"path":"https://gonzalezben81.github.io/vault/reference/config_aws_root_creds.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"config_aws_root_creds — config_aws_root_creds","text":"","code":"if (FALSE)   config_aws_root_creds(url=\"vault-url.com\",token=token,aws_key=\"aws-key-from-iam-user\",aws_secret=\"aws-secret-from-iam-user\",aws_region=\"us-east-1\")"},{"path":"https://gonzalezben81.github.io/vault/reference/get_approle_token.html","id":null,"dir":"Reference","previous_headings":"","what":"get_approle_token — get_approle_token","title":"get_approle_token — get_approle_token","text":"Vault: Gets approle token Vault.","code":""},{"path":"https://gonzalezben81.github.io/vault/reference/get_approle_token.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get_approle_token — get_approle_token","text":"","code":"get_approle_token(url, role_id, secret_id)"},{"path":"https://gonzalezben81.github.io/vault/reference/get_approle_token.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get_approle_token — get_approle_token","text":"url URL HashiCorp Vault instance. role_id role_id approle Vault. secret_id secret_id approle Vault.","code":""},{"path":"https://gonzalezben81.github.io/vault/reference/get_approle_token.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"get_approle_token — get_approle_token","text":"Return's approle token allows approle query secrets Vault.","code":""},{"path":"https://gonzalezben81.github.io/vault/reference/get_approle_token.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"get_approle_token — get_approle_token","text":"function gets approle token vault instance. can utilize approle token query data vault.","code":""},{"path":"https://gonzalezben81.github.io/vault/reference/get_approle_token.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"get_approle_token — get_approle_token","text":"","code":"if (FALSE)   get_approle_token(url,role_id,secret_id)"},{"path":"https://gonzalezben81.github.io/vault/reference/get_aws_creds.html","id":null,"dir":"Reference","previous_headings":"","what":"get_aws_creds — get_aws_creds","title":"get_aws_creds — get_aws_creds","text":"Vault: Gets AWS creds Vault.","code":""},{"path":"https://gonzalezben81.github.io/vault/reference/get_aws_creds.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get_aws_creds — get_aws_creds","text":"","code":"get_aws_creds(url = NULL, token = NULL, role_name = NULL)"},{"path":"https://gonzalezben81.github.io/vault/reference/get_aws_creds.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get_aws_creds — get_aws_creds","text":"url URL HashiCorp Vault instance. token token user/github/approle/etc.... registered Vault. role_name role_name role registered Vault","code":""},{"path":"https://gonzalezben81.github.io/vault/reference/get_aws_creds.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"get_aws_creds — get_aws_creds","text":"Return's user token allows individual query secrets Vault.","code":""},{"path":"https://gonzalezben81.github.io/vault/reference/get_aws_creds.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"get_aws_creds — get_aws_creds","text":"function gets AWS creds role/IAM User registered Vault.","code":""},{"path":"https://gonzalezben81.github.io/vault/reference/get_aws_creds.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"get_aws_creds — get_aws_creds","text":"","code":"if (FALSE)   get_aws_creds(url=\"vault-url.com\",token=token,role_name=\"aws-vault-role-name\")"},{"path":"https://gonzalezben81.github.io/vault/reference/get_aws_role_info.html","id":null,"dir":"Reference","previous_headings":"","what":"get_aws_role_info — get_aws_role_info","title":"get_aws_role_info — get_aws_role_info","text":"Vault: Gets AWS role info Vault.","code":""},{"path":"https://gonzalezben81.github.io/vault/reference/get_aws_role_info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get_aws_role_info — get_aws_role_info","text":"","code":"get_aws_role_info(url = NULL, token = NULL, role_name = NULL)"},{"path":"https://gonzalezben81.github.io/vault/reference/get_aws_role_info.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get_aws_role_info — get_aws_role_info","text":"url URL HashiCorp Vault instance. token token user/github/approle/etc.... registered Vault. role_name role_name role registered Vault","code":""},{"path":"https://gonzalezben81.github.io/vault/reference/get_aws_role_info.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"get_aws_role_info — get_aws_role_info","text":"Return's user token allows individual query secrets Vault.","code":""},{"path":"https://gonzalezben81.github.io/vault/reference/get_aws_role_info.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"get_aws_role_info — get_aws_role_info","text":"function gets AWS role info Vault role registered Vault instance.","code":""},{"path":"https://gonzalezben81.github.io/vault/reference/get_aws_role_info.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"get_aws_role_info — get_aws_role_info","text":"","code":"if (FALSE)   get_aws_role_info(url,token,role_name)"},{"path":"https://gonzalezben81.github.io/vault/reference/get_aws_sts.html","id":null,"dir":"Reference","previous_headings":"","what":"get_aws_sts — get_aws_sts","title":"get_aws_sts — get_aws_sts","text":"Vault: Gets AWS STS credentials Vault.","code":""},{"path":"https://gonzalezben81.github.io/vault/reference/get_aws_sts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get_aws_sts — get_aws_sts","text":"","code":"get_aws_sts(url = NULL, token = NULL, role_name = NULL)"},{"path":"https://gonzalezben81.github.io/vault/reference/get_aws_sts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get_aws_sts — get_aws_sts","text":"url url HashiCorp Vault instance. token token user/github/approle/etc.... registered Vault. role_name role_name role registered Vault","code":""},{"path":"https://gonzalezben81.github.io/vault/reference/get_aws_sts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"get_aws_sts — get_aws_sts","text":"Return's user token allows individual query secrets Vault.","code":""},{"path":"https://gonzalezben81.github.io/vault/reference/get_aws_sts.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"get_aws_sts — get_aws_sts","text":"function gets AWS STS credentials registered role Vault instance.","code":""},{"path":"https://gonzalezben81.github.io/vault/reference/get_aws_sts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"get_aws_sts — get_aws_sts","text":"","code":"if (FALSE)   get_aws_sts(url,token,role_name)"},{"path":"https://gonzalezben81.github.io/vault/reference/get_github_token.html","id":null,"dir":"Reference","previous_headings":"","what":"get_github_token — get_github_token","title":"get_github_token — get_github_token","text":"get_github_token: Gets token Vault utilizing github login credentials.","code":""},{"path":"https://gonzalezben81.github.io/vault/reference/get_github_token.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get_github_token — get_github_token","text":"","code":"get_github_token(url, github_token)"},{"path":"https://gonzalezben81.github.io/vault/reference/get_github_token.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get_github_token — get_github_token","text":"url url HashiCorp Vault instance. github_token personal authentication token PAT github repo.","code":""},{"path":"https://gonzalezben81.github.io/vault/reference/get_github_token.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"get_github_token — get_github_token","text":"Return's user token allows individual query secrets Vault.","code":""},{"path":"https://gonzalezben81.github.io/vault/reference/get_github_token.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"get_github_token — get_github_token","text":"function obtains token github user Vault. user can utilize token retrieved query secrets Vault. need url HashiCorp Vault using PAT github. already created organization github utilize login path Vault.","code":""},{"path":"https://gonzalezben81.github.io/vault/reference/get_github_token.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"get_github_token — get_github_token","text":"","code":"if (FALSE)  vault_git_token<-  get_github_token(url='vault.url',github_token='12345abcdef')"},{"path":"https://gonzalezben81.github.io/vault/reference/get_role_id.html","id":null,"dir":"Reference","previous_headings":"","what":"get_role_id — get_role_id","title":"get_role_id — get_role_id","text":"Vault: Gets Approle ID Vault.","code":""},{"path":"https://gonzalezben81.github.io/vault/reference/get_role_id.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get_role_id — get_role_id","text":"","code":"get_role_id(url, role_name, token)"},{"path":"https://gonzalezben81.github.io/vault/reference/get_role_id.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get_role_id — get_role_id","text":"url URL HashiCorp Vault instance. role_name name role Vault instance. token token loging role user/pass method github/auth method.","code":""},{"path":"https://gonzalezben81.github.io/vault/reference/get_role_id.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"get_role_id — get_role_id","text":"Return's user/github/etc... token allows individual query secrets Vault via approle.","code":""},{"path":"https://gonzalezben81.github.io/vault/reference/get_role_id.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"get_role_id — get_role_id","text":"function obtains approle ID Vault. user can utilize approle ID retrieved query secrets Vault via approle method. need URL HashiCorp Vault using user/github/etc... token retrieve approle id.","code":""},{"path":"https://gonzalezben81.github.io/vault/reference/get_role_id.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"get_role_id — get_role_id","text":"","code":"if (FALSE)   get_role_id(url='vautl.url',role_name='jenkins',token='12345abcdef')"},{"path":"https://gonzalezben81.github.io/vault/reference/get_secret_id.html","id":null,"dir":"Reference","previous_headings":"","what":"get_secret_id — get_secret_id","title":"get_secret_id — get_secret_id","text":"Vault: Gets secret id approle registered vault e.g.(jenkins).","code":""},{"path":"https://gonzalezben81.github.io/vault/reference/get_secret_id.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get_secret_id — get_secret_id","text":"","code":"get_secret_id(url, role_name, token)"},{"path":"https://gonzalezben81.github.io/vault/reference/get_secret_id.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get_secret_id — get_secret_id","text":"url URL HashiCorp Vault instance. role_name name role Vault instance. token token user/github/etc... login method. Note: user/github/etc auth method token must access work approles Vault","code":""},{"path":"https://gonzalezben81.github.io/vault/reference/get_secret_id.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"get_secret_id — get_secret_id","text":"Return's secret id allows individual query secrets Vault via approle method.","code":""},{"path":"https://gonzalezben81.github.io/vault/reference/get_secret_id.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"get_secret_id — get_secret_id","text":"function obtains secret id approle Vault. user can utilize secret id retrieved obtain approle token Vault. need URL HashiCorp Vault using role name vault token auth path Vault.","code":""},{"path":"https://gonzalezben81.github.io/vault/reference/get_secret_id.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"get_secret_id — get_secret_id","text":"","code":"if (FALSE)   get_secret_id(url='vautl-url.com',role_name='jenkins',token='12345abcdef')"},{"path":"https://gonzalezben81.github.io/vault/reference/get_user_token.html","id":null,"dir":"Reference","previous_headings":"","what":"get_user_token — get_user_token","title":"get_user_token — get_user_token","text":"Vault: Gets Vault Data","code":""},{"path":"https://gonzalezben81.github.io/vault/reference/get_user_token.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get_user_token — get_user_token","text":"","code":"get_user_token(url, user, pass)"},{"path":"https://gonzalezben81.github.io/vault/reference/get_user_token.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get_user_token — get_user_token","text":"url URL HashiCorp Vault instance. user username registered Vault. pass password username registered Vault","code":""},{"path":"https://gonzalezben81.github.io/vault/reference/get_user_token.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"get_user_token — get_user_token","text":"Return's user token allows individual query secrets Vault.","code":""},{"path":"https://gonzalezben81.github.io/vault/reference/get_user_token.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"get_user_token — get_user_token","text":"function gets user token Vault user name registered Vault instance registered auth/userpass path.","code":""},{"path":"https://gonzalezben81.github.io/vault/reference/get_user_token.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"get_user_token — get_user_token","text":"","code":"if (FALSE)   get_user_token(url,user,pass)"},{"path":"https://gonzalezben81.github.io/vault/reference/get_vault_data.html","id":null,"dir":"Reference","previous_headings":"","what":"get_vault_data — get_vault_data","title":"get_vault_data — get_vault_data","text":"function gets \"secrets\" \"data\" vault instance returns inside dataframe. need HashiCorp Vault URL using including full path secret e.g. /secrets lastly need token allows interact Vault via API.","code":""},{"path":"https://gonzalezben81.github.io/vault/reference/get_vault_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get_vault_data — get_vault_data","text":"","code":"get_vault_data(url = NULL, path = NULL, token = NULL, dataframe = \"N\")"},{"path":"https://gonzalezben81.github.io/vault/reference/get_vault_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get_vault_data — get_vault_data","text":"url URL HashiCorp Vault instance. path path secret vault instance. ?version=2 can removed recent version secret returned. user can specify specific version secret needed. token token vault instance. dataframe whether return secret data via dataframe. default \"N\"","code":""},{"path":"https://gonzalezben81.github.io/vault/reference/get_vault_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"get_vault_data — get_vault_data","text":"Return's data secrets vault instance.","code":""},{"path":"https://gonzalezben81.github.io/vault/reference/get_vault_data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"get_vault_data — get_vault_data","text":"Vault: Gets Vault Data","code":""},{"path":"https://gonzalezben81.github.io/vault/reference/get_vault_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"get_vault_data — get_vault_data","text":"","code":"if (FALSE)   get_vault_data(url = \"https://vault-url.com\",path = \"data?version=2\",token = \"hvs.token\",dataframe=\"N\")"},{"path":"https://gonzalezben81.github.io/vault/reference/list_aws_roles.html","id":null,"dir":"Reference","previous_headings":"","what":"list_aws_roles — list_aws_roles","title":"list_aws_roles — list_aws_roles","text":"Vault: Lists AWS roles registered Vault.","code":""},{"path":"https://gonzalezben81.github.io/vault/reference/list_aws_roles.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"list_aws_roles — list_aws_roles","text":"","code":"list_aws_roles(url = NULL, token = NULL)"},{"path":"https://gonzalezben81.github.io/vault/reference/list_aws_roles.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"list_aws_roles — list_aws_roles","text":"url URL HashiCorp Vault instance. token token user/github/approle/etc.... registered Vault.","code":""},{"path":"https://gonzalezben81.github.io/vault/reference/list_aws_roles.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"list_aws_roles — list_aws_roles","text":"Return's AWS roles registered Vault.","code":""},{"path":"https://gonzalezben81.github.io/vault/reference/list_aws_roles.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"list_aws_roles — list_aws_roles","text":"function lists AWS roles registered Vault.","code":""},{"path":"https://gonzalezben81.github.io/vault/reference/list_aws_roles.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"list_aws_roles — list_aws_roles","text":"","code":"if (FALSE)   list_aws_roles(url,token)"},{"path":"https://gonzalezben81.github.io/vault/reference/my_function.html","id":null,"dir":"Reference","previous_headings":"","what":"My Function — my_function","title":"My Function — my_function","text":"function demonstrates include JSON policy examples documentation.","code":""},{"path":"https://gonzalezben81.github.io/vault/reference/my_function.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"My Function — my_function","text":"","code":"my_function(x)"},{"path":"https://gonzalezben81.github.io/vault/reference/my_function.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"My Function — my_function","text":"x numeric value.","code":""},{"path":"https://gonzalezben81.github.io/vault/reference/my_function.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"My Function — my_function","text":"square x.","code":""},{"path":"https://gonzalezben81.github.io/vault/reference/my_function.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"My Function — my_function","text":"example JSON policy: ```json    \"policy\":      \"version\": \"2012-10-17\",     \"statement\": [        \"effect\": \"Allow\",         \"action\": \"s3:GetObject\",         \"resource\": \"arn:aws:s3:::-bucket/*\"    ] ```","code":""},{"path":"https://gonzalezben81.github.io/vault/reference/my_function.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"My Function — my_function","text":"","code":"my_function(2) #> [1] 4"},{"path":"https://gonzalezben81.github.io/vault/reference/post_vault_data.html","id":null,"dir":"Reference","previous_headings":"","what":"post_vault_data — post_vault_data","title":"post_vault_data — post_vault_data","text":"Vault: Posts data path specify Vault.","code":""},{"path":"https://gonzalezben81.github.io/vault/reference/post_vault_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"post_vault_data — post_vault_data","text":"","code":"post_vault_data(url = NULL, path = NULL, token = NULL, secrets = NULL)"},{"path":"https://gonzalezben81.github.io/vault/reference/post_vault_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"post_vault_data — post_vault_data","text":"url URL HashiCorp Vault instance. path path secret vault instance. token token vault instance. secrets secrets written vault.","code":""},{"path":"https://gonzalezben81.github.io/vault/reference/post_vault_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"post_vault_data — post_vault_data","text":"Allows user write data Vault.","code":""},{"path":"https://gonzalezben81.github.io/vault/reference/post_vault_data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"post_vault_data — post_vault_data","text":"function writes secrets data vault instance returns message secrets written correctly. need HashiCorp Vault URL using including full path secret e.g. (https://url.vault.com/v1/secret/things) lastly need token allows interact Vault via API. can pass list secrets use 'list(one=\"two\",three=\"four) forth. allow send several secrets Vault . Remember overwrite secrets want write new secrets old secrets placeholders.","code":""},{"path":"https://gonzalezben81.github.io/vault/reference/post_vault_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"post_vault_data — post_vault_data","text":"","code":"if (FALSE)   post_vault_data(url,path,token,token,secrets=list(one=\"two\",three=\"four\"))"},{"path":"https://gonzalezben81.github.io/vault/reference/wrap_secrets.html","id":null,"dir":"Reference","previous_headings":"","what":"wrap_secrets — wrap_secrets","title":"wrap_secrets — wrap_secrets","text":"Vault: Gets approle token Vault.","code":""},{"path":"https://gonzalezben81.github.io/vault/reference/wrap_secrets.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"wrap_secrets — wrap_secrets","text":"","code":"wrap_secrets(url = NULL, token = NULL, secrets_to_wrap = NULL, ttl = \"30m\")"},{"path":"https://gonzalezben81.github.io/vault/reference/wrap_secrets.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"wrap_secrets — wrap_secrets","text":"url URL HashiCorp Vault instance. token token used wrap secrets Vault via wrapping utility. secrets_to_wrap secrets want wrap via Vault wrapping utility. ttl Time live ttl, refers time token able used unwrap wrapped secrets Vault.","code":""},{"path":"https://gonzalezben81.github.io/vault/reference/wrap_secrets.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"wrap_secrets — wrap_secrets","text":"Return's wrap token used unwrap secrets Vault.","code":""},{"path":"https://gonzalezben81.github.io/vault/reference/wrap_secrets.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"wrap_secrets — wrap_secrets","text":"function wraps secrets via wrap endpoint Vault. function returns single use token can utilized retrieve secrets.","code":""},{"path":"https://gonzalezben81.github.io/vault/reference/wrap_secrets.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"wrap_secrets — wrap_secrets","text":"Vault Wrap Token APIVault Wrapping Overview","code":""},{"path":"https://gonzalezben81.github.io/vault/reference/wrap_secrets.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"wrap_secrets — wrap_secrets","text":"","code":"if (FALSE)   wrap_secrets(url,token,secrets_to_wrap,ttl)"}]
