% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_token.R, R/github_get_token.R
\name{get_token}
\alias{get_token}
\alias{data}
\alias{github_get_token}
\title{get_token}
\usage{
get_token(url, user, pass)

github_get_token(url, github_token)
}
\arguments{
\item{url}{url of the Hashicorp Vault instance.}

\item{user}{username registered in Vault.}

\item{pass}{password for username registered in Vault}

\item{github_token}{personal authentication token or PAT from your github repo.}
}
\value{
Return's the user token that allows an individual to query secrets in Vault.

Return's the user token that allows an individual to query secrets in Vault.
}
\description{
Vault: Gets the Vault Data

Vault: Gets the Vault Data
}
\details{
This function gets secrets or data from the vault instance and returns them inside a dataframe.
You will need the Hashicorp Vault url you are using including the full path to the secret e.g. (https://url.vault.com/v1/secret/things)
and lastly you will need a token that allows you to interact with Vault via the API. You can pass a list of secrets at once use 'list(one="two",three="four) and so on and so forth. This will allow you to send several secrets to Vault at once.

This function obtains the token for the github user from Vault. The user can then utilize the token retrieved to query secrets from Vault. 
You will need the url of the Hashicorp Vault you are using and your PAT from github. You should have already created an organization in github
to utilize this login path in Vault.
}
\examples{

\dontrun{  get_token(url,user,pass)

}


\dontrun{  github_get_token(url,github_token)

}

}
\keyword{get_token}
\keyword{github_get_token}
